<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Getter on 아겔로그</title>
    <link>https://ageldama.github.io/tags/getter/</link>
    <description>Recent content in Getter on 아겔로그</description>
    <generator>Hugo</generator>
    <language>ko-kr</language>
    <copyright>© &lt;a href=&#39;https://ageldama.github.io/myself&#39;&gt;ageldama&lt;/a&gt; 👾</copyright>
    <lastBuildDate>Sun, 22 Jan 2017 16:15:00 +0100</lastBuildDate>
    <atom:link href="https://ageldama.github.io/tags/getter/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Java Immutables와 친숙한 오래된 문제들</title>
      <link>https://ageldama.github.io/posts/2017/2017-01-22-java-immutables-classic-problem/</link>
      <pubDate>Sun, 22 Jan 2017 16:15:00 +0100</pubDate>
      <guid>https://ageldama.github.io/posts/2017/2017-01-22-java-immutables-classic-problem/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://immutables.github.io/&#34;&gt;https://immutables.github.io/&lt;/a&gt; 요즘 이걸 살짝 봤는데, 재미있었다.&lt;/p&gt;&#xA;&lt;p&gt;그런데 일단 깊이보거나 써보기 전에 드는 걱정은,&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;이거 기존의 몇몇 프레임웍이나 라이브러리들이랑은 친하게 지내기&#xA;어렵지 않을까.&#xA;&lt;ul&gt;&#xA;&lt;li&gt;왜냐하면, 대부분의 POJO에 연관된&#xA;생성단계에서,&#xA;&lt;a href=&#34;https://en.wikipedia.org/wiki/Default_constructor&#34;&gt;default constructor&lt;/a&gt; 와&#xA;setter-methods을 갖고, 값을 세팅하는 경우가 대부분인데,&lt;/li&gt;&#xA;&lt;li&gt;예를들면, 대부분의 ORM 프레임웍들이나 POJO으로 JSON등을&#xA;Deserialization해서 직접 객체를 생성할 책임을 프레임웍이나&#xA;라이브러리가 가져가는 경우에 대부분.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&amp;hellip;그러면 결국 말짱황인거 같다.. 아무리 accessor 메서드들&#xA;boilerplate으로 생성하는거 막아주는게 좋다고 해도, 솔직히 그냥 한번&#xA;IDE에서 생성하고 평범하고 조금 멍청하게 만들어놓고 쓰는게 더 낫겠다는&#xA;생각이든다.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
