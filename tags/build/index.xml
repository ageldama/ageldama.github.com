<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Build on 아겔로그</title>
    <link>https://ageldama.github.io/tags/build/</link>
    <description>Recent content in Build on 아겔로그</description>
    <generator>Hugo</generator>
    <language>ko-kr</language>
    <copyright>© &lt;a href=&#39;https://ageldama.github.io/myself&#39;&gt;ageldama&lt;/a&gt; 👾</copyright>
    <lastBuildDate>Fri, 14 Aug 2020 00:00:00 +0900</lastBuildDate>
    <atom:link href="https://ageldama.github.io/tags/build/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Ping 14/Aug/2020</title>
      <link>https://ageldama.github.io/posts/2020-08aug/ping-14fri/</link>
      <pubDate>Fri, 14 Aug 2020 00:00:00 +0900</pubDate>
      <guid>https://ageldama.github.io/posts/2020-08aug/ping-14fri/</guid>
      <description>빌드도구의 경험과 Meson을 사용하기 Meson-ABC 갖고 놀아본 코드&#xA;아주 예전에 commercially 성공적이었었던 C++ 프로젝트를 홀로 기획, 설계, 개발했었었다.&#xA;처음에는 GNU Makefile으로 간단히 시작했었었다. 타겟 플랫폼이 뻔하게 윈도였기 때문이다.&#xA;그 이전에는 ANSI C으로 작성한 SDL 조합형 비트맵 출력 오픈소스 라이브러리 같은 것들을 작업할 때는 그냥 GNU Autotools 을 쓰거나 했었었다.&#xA;하지만 그렇게 configure 하거나 할 부분도 없고 처음 혼자 시작하며 다른 신경 쓸 것도 무지하게 많았었던 프로젝트였고 더욱이 기간도 한정적이었었다.1</description>
    </item>
    <item>
      <title>moonshot.el 최초 릴리즈</title>
      <link>https://ageldama.github.io/posts/2019-12dec/moonshot-1st-rel/</link>
      <pubDate>Sun, 29 Dec 2019 00:00:00 +0900</pubDate>
      <guid>https://ageldama.github.io/posts/2019-12dec/moonshot-1st-rel/</guid>
      <description>moonshot.el 을 만들어서 공개했다.&#xA;이맥스를 써오면서 불편하다고 생각한걸 간단히 하고 싶었었다:&#xA;불편함들 빌드 디렉토리 Projectile을 사용하니까 프로젝트 디렉토리는 관리가 쉬운데, 빌드 디렉토리는 관리가 어려웠다.&#xA;아예 Projectile이 추론하는 디렉토리 바깥에 빌드 디렉토리는 위치하는 경우도 있으니까.&#xA;예) GNU Autotools configure 이나 CMake으로 작업할 때, 소스트리 바깥에 빌드 디렉토리를 걸어놓아서 정리를 깔끔하게 할 수 있으니까. 그런데 이 &amp;#39;빌드 디렉토리&amp;#39;가 중요한게,&#xA;말그대로 컴파일한 .o 파일이나 최종 결과 실행파일 등이 여기에 쌓이니까 디버깅, 테스트를 위해서 실행파일을 실행하거나, 심지어 make 이나 ninja 같은 빌드 커맨드를 실행하기 위해서도 빌드 디렉토리를 지정하거나 이동해서 실행해야 하니까 귀찮다.</description>
    </item>
  </channel>
</rss>
