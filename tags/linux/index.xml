<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux on 아겔로그</title>
    <link>https://ageldama.github.io/tags/linux/</link>
    <description>Recent content in Linux on 아겔로그</description>
    <generator>Hugo</generator>
    <language>ko-kr</language>
    <copyright>© &lt;a href=&#39;https://ageldama.github.io/myself&#39;&gt;ageldama&lt;/a&gt; 👾</copyright>
    <lastBuildDate>Thu, 08 May 2025 19:17:25 +0900</lastBuildDate>
    <atom:link href="https://ageldama.github.io/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ddakong v1.1 릴리즈: FreeBSD / kqueue</title>
      <link>https://ageldama.github.io/posts/2025-05may/term-ddakong-v1.1-release/</link>
      <pubDate>Thu, 08 May 2025 19:17:25 +0900</pubDate>
      <guid>https://ageldama.github.io/posts/2025-05may/term-ddakong-v1.1-release/</guid>
      <description>&lt;div id=&#34;outline-container-headline-1&#34; class=&#34;outline-2&#34;&gt;&#xA;&lt;h2 id=&#34;headline-1&#34;&gt;&#xA;릴리즈 v1.1&#xA;&lt;/h2&gt;&#xA;&lt;div id=&#34;outline-text-headline-1&#34; class=&#34;outline-text-2&#34;&gt;&#xA;&lt;p&gt;&#xA;  freebsd 지원: 빌드가능하도록 수정 + kqueue 이벤트처리 추가&lt;/p&gt;&#xA;&lt;p&gt;&#xA;  (원래는 epoll/linux만 지원)&lt;/p&gt;&#xA;&lt;p&gt;&#xA;&amp;lt;&lt;a href=&#34;https://github.com/ageldama/term-ddakong/releases/tag/v1.1&#34;&gt;https://github.com/ageldama/term-ddakong/releases/tag/v1.1&lt;/a&gt;&amp;gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;darwin/osx, openbsd 등은 빌드+실행될거 같은데 확신은 못하겠믐.&lt;/li&gt;&#xA;&lt;li&gt;매 릴리즈마다 크로스컴파일해서 바이너리릴리즈해왔는데, 리눅스는&#xA;aarch64, armhf, i686, x86_64 자동화해놨는데, freebsd은 아직이라&#xA;이번엔 스킵.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&#xA;…오랬만에 freebsd 켜서 쓰는데, 반응속도감 역시 엄청좋다.&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>ddakong v1.0 릴리즈: lua scripting 시스템</title>
      <link>https://ageldama.github.io/posts/2025-05may/term-ddakong-v1.0-release/</link>
      <pubDate>Wed, 07 May 2025 19:28:25 +0900</pubDate>
      <guid>https://ageldama.github.io/posts/2025-05may/term-ddakong-v1.0-release/</guid>
      <description>&lt;div id=&#34;outline-container-headline-1&#34; class=&#34;outline-2&#34;&gt;&#xA;&lt;h2 id=&#34;headline-1&#34;&gt;&#xA;릴리즈 v1.0&#xA;&lt;/h2&gt;&#xA;&lt;div id=&#34;outline-text-headline-1&#34; class=&#34;outline-text-2&#34;&gt;&#xA;&lt;p&gt;&#xA;  ANSI C/DLL 플러그인만이 아니라, Lua scripting plugin 만들어서,&#xA;  그냥 루아스크립팅만으로 플러그인 같은 확장이 가능해졌다.&lt;/p&gt;&#xA;&lt;p&gt;&#xA;  그리고 이것저것 안정화/문서화하고, 더욱 hackable🪓🔥하고 가벼운&#xA;  터미널입력기가 되었음.&lt;/p&gt;&#xA;&lt;p&gt;&#xA;  &lt;a href=&#34;https://github.com/ageldama/term-ddakong/releases/tag/v1.0&#34;&gt;https://github.com/ageldama/term-ddakong/releases/tag/v1.0&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>ddakong v0.0.8 릴리즈: 안정화 및 플러그인 시스템</title>
      <link>https://ageldama.github.io/posts/2025-05may/term-ddakong-v0.0.8-release/</link>
      <pubDate>Sat, 03 May 2025 14:32:25 +0000</pubDate>
      <guid>https://ageldama.github.io/posts/2025-05may/term-ddakong-v0.0.8-release/</guid>
      <description>&lt;div id=&#34;outline-container-headline-1&#34; class=&#34;outline-2&#34;&gt;&#xA;&lt;h2 id=&#34;headline-1&#34;&gt;&#xA;스크린샷:&#xA;&lt;/h2&gt;&#xA;&lt;div id=&#34;outline-text-headline-1&#34; class=&#34;outline-text-2&#34;&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://ageldama.github.io/2025-05may/KIMCHI-cropped.png&#34; alt=&#34;/2025-05may/KIMCHI-cropped.png&#34; title=&#34;/2025-05may/KIMCHI-cropped.png&#34; /&gt;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;&amp;lt; &lt;a href=&#34;https://github.com/ageldama/term-ddakong&#34;&gt;https://github.com/ageldama/term-ddakong&lt;/a&gt; &amp;gt;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;&amp;lt; &lt;a href=&#34;https://github.com/ageldama/term-ddakong/releases/tag/v0.0.8&#34;&gt;https://github.com/ageldama/term-ddakong/releases/tag/v0.0.8&lt;/a&gt; &amp;gt;&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;div id=&#34;outline-container-headline-2&#34; class=&#34;outline-2&#34;&gt;&#xA;&lt;h2 id=&#34;headline-2&#34;&gt;&#xA;릴리즈 v0.0.8&#xA;&lt;/h2&gt;&#xA;&lt;div id=&#34;outline-text-headline-2&#34; class=&#34;outline-text-2&#34;&gt;&#xA;&lt;p&gt;안정화/문서화하고, 이제 플러그인 시스템을 도입해서 원하는대로&#xA;hackable🪓🔥한 터미널용 입력기가 되었다.&lt;/p&gt;&#xA;&lt;p&gt;&#xA;플러그인 작성해서:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;한글만이 아니라 다른 언어 입력기로 사용할 수도 있음.&lt;/li&gt;&#xA;&lt;li&gt;UTF-8 이외에 다른 인코딩으로 출력가능함. (예: EUC-KR, EUC-JP …)&lt;/li&gt;&#xA;&lt;li&gt;토글키(&lt;code&gt;Control-H&lt;/code&gt;) 마음에 안들면 바꾸면 됨.&lt;/li&gt;&#xA;&lt;li&gt;등등등&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&#xA;오늘 한 작업들은:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;안정화 많이 진행했다.&lt;/li&gt;&#xA;&lt;li&gt;코드 문서화 주석작성 다 했다.&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;cross-platform build 자동화해서 릴리즈 때 편해졌다.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;armhf (raspberry pi 32bit), aarch64 (raspberry pi 64bit),&#xA;i386 (32bit), x86_64 모두 릴리즈하고 있다.&lt;/li&gt;&#xA;&lt;li&gt;..혹시나 어디선가 i386 기계 터미널에서 한글을 입력하고 싶은&#xA;사람이 있을거 같아서.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>ddakong 한글입력기 릴리즈</title>
      <link>https://ageldama.github.io/posts/2025-05may/term-ddakong-initial-release/</link>
      <pubDate>Fri, 02 May 2025 10:06:00 +0000</pubDate>
      <guid>https://ageldama.github.io/posts/2025-05may/term-ddakong-initial-release/</guid>
      <description>&lt;div id=&#34;outline-container-headline-1&#34; class=&#34;outline-2&#34;&gt;&#xA;&lt;h2 id=&#34;headline-1&#34;&gt;&#xA;&lt;a href=&#34;https://github.com/ageldama/term-ddakong&#34;&gt;https://github.com/ageldama/term-ddakong&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;div id=&#34;outline-text-headline-1&#34; class=&#34;outline-text-2&#34;&gt;&#xA;&lt;p&gt;&#xA;일단 내가 fbterm에서 가볍게 한글쓰고 싶어서 만듦.&lt;/p&gt;&#xA;&lt;p&gt;&#xA;ansi c99만으로 가볍게 작성했다. 다른 라이브러리 의존않고.&#xA;만족스럽다. 빌드하니까 25 KB 정도 나오네. 만족.&lt;/p&gt;&#xA;&lt;p&gt;&#xA;더 했으면 하는 일들은:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;lua -or- dlopen 등으로 다른 입력기 지원하기 (예: 3벌식)&lt;/li&gt;&#xA;&lt;li&gt;utf-8 이외의 인코딩 지원하기&lt;/li&gt;&#xA;&lt;li&gt;raspberry pi 32/64 바이너리 릴리즈 (armhf, arm64)&lt;/li&gt;&#xA;&lt;li&gt;소스코드 조금 포매팅, 주석작성, 문서화&lt;/li&gt;&#xA;&lt;li&gt;빌드개선 : 사용하는 함수 등 체크하기 강화 (예: &lt;code&gt;epoll&lt;/code&gt; …어차피&#xA;거의 다 있지만.)&lt;/li&gt;&#xA;&lt;li&gt;스크린샷? ㅎㅎ&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>가볍고 빠른 antiX Linux &#43; runit, koreader 그리고 bloatware</title>
      <link>https://ageldama.github.io/posts/2025-04apr/2025-04apr02--01-antix-linux/</link>
      <pubDate>Wed, 02 Apr 2025 05:51:49 +0000</pubDate>
      <guid>https://ageldama.github.io/posts/2025-04apr/2025-04apr02--01-antix-linux/</guid>
      <description>&lt;div id=&#34;outline-container-headline-1&#34; class=&#34;outline-2&#34;&gt;&#xA;&lt;h2 id=&#34;headline-1&#34;&gt;&#xA;antiX linux&#xA;&lt;/h2&gt;&#xA;&lt;div id=&#34;outline-text-headline-1&#34; class=&#34;outline-text-2&#34;&gt;&#xA;&lt;p&gt;오래된 랩탑으로 fedora 그냥 아무 생각없이 대충 쓰는데 좀 버벅. 어차피&#xA;메인드라이버도 아니고 그냥 그러려니 하고 살다가, 좀 답답해서&#xA;lightweight linux distro을 골라봤다.&lt;/p&gt;&#xA;&lt;p&gt;&#xA;&lt;a href=&#34;https://antixlinux.com/&#34;&gt;https://antixlinux.com/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;거기에 이전에 시도했던 void linux에서 마음에 들었었던 runit을 init으로&#xA;쓰는 spin으로 선택해서 설치했다.&lt;/p&gt;&#xA;&lt;p&gt;&#xA;결과는… 놀라울 정도로 가벼웠다.&lt;/p&gt;&#xA;&lt;p&gt;&#xA;luks disk encryption + btrfs을 기존에는 적용했다가(btrfs이&#xA;기본옵션이어서 귀찮아서), 이번에는 그냥 ext4만으로 설치해서 더&#xA;가벼운걸까 싶기도 하고.&lt;/p&gt;&#xA;&lt;p&gt;&#xA;systemd은 익숙해질수로 편안해지기는 했었는데, 그럼에도 확실히 전통적인&#xA;linux/unix의 그것과는 조금 달라서 처음에 당혹스럽긴 했었었다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ping 08/03/2023 .01 : 전자책읽기</title>
      <link>https://ageldama.github.io/posts/2023-03mar/2023-03mar08--01-ping/</link>
      <pubDate>Wed, 08 Mar 2023 06:15:08 +0000</pubDate>
      <guid>https://ageldama.github.io/posts/2023-03mar/2023-03mar08--01-ping/</guid>
      <description>&lt;p&gt;&#xA;linux에서 전자책 편안하게 읽는 방법들 간단하게 몇가지 팁들만 나열,&#xA;별로 내용은 길게 늘여 쓰지 않으려고:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;linux, 그중에서도 가벼운 하드웨어와 단순하게 잘 동작하는 배포판.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;여러가지 불필요한 군더더기 없고, 패키지들이 조금 오래된&#xA;버젼이어도, 안정적으로만 동작하면 상관 없음.&lt;/li&gt;&#xA;&lt;li&gt;그래서, debian stable -or- testing 쓰면 속이 편함.&lt;/li&gt;&#xA;&lt;li&gt;하드웨어는 raspberry pi 3/4 둘 다 좋았다. &lt;sup class=&#34;footnote-reference&#34;&gt;&lt;a id=&#34;footnote-reference-1&#34; href=&#34;#footnote-1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&#xA;…특히 전력소모도 거의 없고, 딱 모니터 연결해 놓고 팬소음 거의&#xA;없이 쾌적하게 책을 읽기 좋다.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;calibre 책파일 관리, 읽기 모두 만족스러움&lt;/p&gt;</description>
    </item>
    <item>
      <title>Linux 5.8와 TP-Link Archer T2U Plus (RTL8821AU)</title>
      <link>https://ageldama.github.io/posts/2020-08aug/linux-5.8-and-tp-link-archer-t2u-plus-rtl8821au/</link>
      <pubDate>Thu, 27 Aug 2020 00:00:01 +0900</pubDate>
      <guid>https://ageldama.github.io/posts/2020-08aug/linux-5.8-and-tp-link-archer-t2u-plus-rtl8821au/</guid>
      <description>&lt;p&gt;&#xA;arch-desktop의 커널을 무심코 5.8으로 pacman -Syu 했다가 낭패였다.&lt;/p&gt;&#xA;&lt;p&gt;&#xA;USB무선랜이 잡히지 않았다. 그래서 하는 수 없이, FB워크스테이션을&#xA;쓰다가 또 라즈베리파이3에 FB에 달아놓은 realtek USB 무선랜을 붙이고&#xA;유선을 통해 dnsmasq으로 연결해서 고쳐나갔다.&lt;/p&gt;&#xA;&lt;p&gt;&#xA;정말 커널 5.8에서 빌드가 잘 되지는 않았다. 그나마&#xA;&lt;a href=&#34;https://github.com/aircrack-ng/rtl8812au&#34;&gt;https://github.com/aircrack-ng/rtl8812au&lt;/a&gt; 이 드라이버가 살렸다.&lt;/p&gt;&#xA;&lt;div class=&#34;src src-text&#34;&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34; id=&#34;1&#34;&gt;&lt;a class=&#34;lnlinks&#34; href=&#34;#1&#34;&gt;1&lt;/a&gt;&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34; id=&#34;2&#34;&gt;&lt;a class=&#34;lnlinks&#34; href=&#34;#2&#34;&gt;2&lt;/a&gt;&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;# lsusb&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Bus 002 Device 009: ID 2357:0120 TP-Link Archer T2U PLUS [RTL8821AU]&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p&gt;&#xA;그것도 DKMS으로 빌드하면 안되고 그냥 &lt;code&gt;make install&lt;/code&gt; 해서 동작하게&#xA;되었다. 다행이었다. &lt;/p&gt;&#xA;&lt;p&gt;&#xA;그리고 나서 나중에도 로딩하도록 /etc/module-load&#xA;&lt;code&gt;/etc/modules-load.d/rtlusb.conf&lt;/code&gt; 에 &lt;code&gt;88XXau&lt;/code&gt; 라인을 넣고 저장.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Void Linux &#43; Runit으로 데스크탑/랩탑 환경 설정하기</title>
      <link>https://ageldama.github.io/posts/2020-04apr/void-linux/</link>
      <pubDate>Sat, 02 May 2020 00:00:00 +0900</pubDate>
      <guid>https://ageldama.github.io/posts/2020-04apr/void-linux/</guid>
      <description>&lt;p&gt;&#xA;지난 한 달여간 눈코 뜰새 없이 바쁘게 지냈었다. 그렇게 지내다가&#xA;오랬만에 툭닥거려봤다.&lt;/p&gt;&#xA;&lt;p&gt;&#xA;재미로 &lt;a href=&#34;https://voidlinux.org/&#34;&gt;Void Linux&lt;/a&gt;을 설치해봤다. 사실 설치해보고 한적은 꽤 됐고, 메모리&#xA;사용량이 훨씬 가볍고 빠른 성능 때문에, Arch Linux도 충분히 가볍고&#xA;좋지만, 제대로 설정해서 사양이 좋지 않은 랩탑, 데스크탑들을 위해서&#xA;쓰기로 생각하고 있었었다.&lt;/p&gt;&#xA;&lt;p&gt;&#xA;2007년 정도에 Gentoo Linux으로 회사 데스크탑과 Oracle DBMS 서버를&#xA;재밌게 설정한 이후로, 오랬만에 정말 가벼운 리눅스 배포판을 설치하는&#xA;느낌이었다.&lt;/p&gt;&#xA;&lt;p&gt;&#xA;아치리눅스는 Pacman, Makepkg, AUR 같은 것들도 체계가 잘 잡혀있고,&#xA;오히려 Portage 보다 잘 관리되고 괜찮지 않은가 싶기도 할 때가 많아서&#xA;굳이 Gentoo을 다시 쓸 일은 없을 것 같다. 그리고 FreeBSD의 Ports도&#xA;좋지만, AUR에 비해서 포함하는 패키지, 업데이트 빈도가 다른&#xA;느낌이다. 사실 AUR이 정말 빈도가 높은 편이라 그렇겠지. FreeBSD Ports도&#xA;정말 열심히 업데이트 되지만.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Grub2, Archlinux ISO으로 만능 USB 메모리스틱 만들기</title>
      <link>https://ageldama.github.io/posts/2020-02feb/make-grub2-usb/</link>
      <pubDate>Sun, 23 Feb 2020 00:00:00 +0900</pubDate>
      <guid>https://ageldama.github.io/posts/2020-02feb/make-grub2-usb/</guid>
      <description>&lt;div id=&#34;outline-container-headline-1&#34; class=&#34;outline-2&#34;&gt;&#xA;&lt;h2 id=&#34;headline-1&#34;&gt;&#xA;경고&#xA;&lt;/h2&gt;&#xA;&lt;div id=&#34;outline-text-headline-1&#34; class=&#34;outline-text-2&#34;&gt;&#xA;&lt;p&gt;&amp;#34;만능USB&amp;#34;이란 말은 사실 &lt;strong&gt;과대광고입니다&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;p&gt;&#xA;  하지만, 몇 가지 장점이 있는 USB 메모리스틱을 만드는 방법임:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;아치리눅스 설치ISO 이미지으로 부팅 가능한 USB 스틱이면서도,&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;ISO파일의 용량만큼만 USB메모리를 활용하는 것이 아니라,&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;용량이 되는만큼 그냥 일반적인 메모리스틱처럼 파일 복사용으로도&#xA;쓸 수 있음.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;사실 리눅스든 다른 OS의 설치 이미지를 USB메모리에 올리면, 딱 그 설치&#xA;  이미지만큼만 사용할 수 있게 만들어 버리고, 그나마도 Read-only 상태인&#xA;  ISO이 되어버리고, 더더욱 나쁘게 다른 추가 파티션을 만들어서 남는&#xA;  공간을 활용할 수도 없게 만든다. (파티션 이미지가 아니라&#xA;  디스크이미지인가보다.)&lt;/p&gt;</description>
    </item>
    <item>
      <title>ELECOM EX-G Pro Trackball 잉여 버튼을 Page Up/Down으로 쓰기</title>
      <link>https://ageldama.github.io/posts/2019-10oct/exg-pro-trackball-pgupdn/</link>
      <pubDate>Fri, 25 Oct 2019 00:00:00 +0900</pubDate>
      <guid>https://ageldama.github.io/posts/2019-10oct/exg-pro-trackball-pgupdn/</guid>
      <description>&lt;p&gt;컴퓨터를 많이 쓰니까 다른 부분보다 손목이 먼저 망가져서, 손목을 조금만&#xA;큰 각도로 꺾으면 아프다. ㅠ.ㅠ.. 예전에도 그랬었는데&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;마우스 안쓰고, 트랙볼 쓰기&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;&#xA;&lt;li&gt;키보드 &lt;a href=&#34;https://en.wikipedia.org/wiki/Numeric_keypad&#34;&gt;넘패드&lt;/a&gt;&#xA;부분 없는 짧은 86키 레이아웃 쓰기&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.logitech.com/en-us/product/trackman-marble-business&#34;&gt;로지텍 마블&#xA;트랙맨&lt;/a&gt;&#xA;잘 쓰다가, 지름을 받아서 조금 다음 티어의 제품으로 업그레이드 해봤다.&lt;/p&gt;&#xA;&lt;p&gt;그래서 바꾼게 &amp;ndash;&amp;gt; &lt;a href=&#34;http://elecom.co.kr/product/ex-g-pro-%EC%9C%A0%EB%AC%B4%EC%84%A0-%ED%95%98%EC%9D%B4%EC%8A%A4%ED%8E%99-%ED%8A%B8%EB%9E%99%EB%B3%BC-%EB%A7%88%EC%9A%B0%EC%8A%A4-m-xpt1mrbk/2184/&#34;&gt;&lt;strong&gt;엘레컴 EX-G Pro Trackball&lt;/strong&gt;&lt;/a&gt; &lt;figure&gt;&lt;img src=&#34;https://ageldama.github.io/images/2019-10oct/elecom_ex-g_pro_trackball_c1b01.jpg&#34; width=&#34;&amp;#39;300&amp;#39;&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;..그런데 다 좋은데, 저기 있는 &lt;em&gt;Function assignment button&lt;/em&gt; 이라고&#xA;써있는게 2개가 더 달려있음.&lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;&#xA;&lt;p&gt;이 추가기능버튼들은 윈도였다면 벤더에서 제공하는 프로그램을 통해서&#xA;할당이 가능할거 같은데, 리눅스/X윈도에서는&#xA;&lt;a href=&#34;https://www.x.org/releases/X11R7.7/doc/man/man1/xev.1.xhtml&#34;&gt;xev&lt;/a&gt;으로&#xA;확인해보니 그냥 &lt;strong&gt;Button 10번, 11번&lt;/strong&gt;이었다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>SteamPlay On Linux</title>
      <link>https://ageldama.github.io/posts/2018-10oct/10wed-steamplay-on-linux/</link>
      <pubDate>Wed, 10 Oct 2018 10:00:00 +0900</pubDate>
      <guid>https://ageldama.github.io/posts/2018-10oct/10wed-steamplay-on-linux/</guid>
      <description>&lt;p&gt;집에 있는 데스크탑에서 윈도10 그냥 사서 설치하고, 거기에&#xA;&lt;a href=&#34;https://store.steampowered.com/&#34;&gt;스팀&lt;/a&gt; 설치해서 게임이나 하는데&#xA;사용했었음&lt;/p&gt;&#xA;&lt;p&gt;거기에 대부분의 작업은 그냥 리눅스에서 하는게 훨씬 편하고 해서&#xA;Virtualbox에 아치리눅스 게스트 만들어놓고 거기에 접속해서&#xA;작업했었었다.&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;&#xA;&lt;p&gt;그러다가&#xA;&lt;a href=&#34;https://support.steampowered.com/kb_article.php?ref=9439-QHKN-1308&#34;&gt;SteamPlay&lt;/a&gt;이란걸&#xA;알게됐고, 모든 게임이 다 지원되는건 아니더라도 그냥 앞으로 나올&#xA;게임들중에 리눅스를 지원하거나 &lt;a href=&#34;https://www.winehq.org/&#34;&gt;Wine&lt;/a&gt;을&#xA;통해서 실행할 수 있으면 이걸 쓰는게 더 낫고 윈도가 싫었다.&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;&#xA;&lt;p&gt;여튼, 좀 설치하고 써보니:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;모든 게임을 지원하지 않는다.&#xA;1. 적당히 지원될거라고 생각하던 게임들도 그냥 &lt;em&gt;됐고, SteamPlay지원&#xA;안해도 돌려볼랜다&lt;/em&gt; 체크해봤자 제대로 안굴러감.&lt;/li&gt;&#xA;&lt;li&gt;게임패드나 그런것 지원은 윈도보다 편안함. 그냥 USB 꽂으면 바로 동작.&lt;/li&gt;&#xA;&lt;li&gt;처음엔 Flatpak같은걸로 설치해서 깔끔하게 해보려다가 그냥&#xA;Pacman으로 Runtime/Native 설치해서 오히려 속편함.&lt;/li&gt;&#xA;&lt;li&gt;NVidia Proprietary Driver 설치했으면, 조금 더 구글링해서&#xA;고쳐줘야할게 생김.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;하프라이프2이나 그런것만 돌려봤는데 전혀 리눅스라서 따로 신경쓸건&#xA;없었다. 폴아웃3이나 그런게 동작 안하는건 너무 슬펐다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>CD Ripping!</title>
      <link>https://ageldama.github.io/posts/2018-10oct/06sat-cd-ripping/</link>
      <pubDate>Sat, 06 Oct 2018 15:00:00 +0900</pubDate>
      <guid>https://ageldama.github.io/posts/2018-10oct/06sat-cd-ripping/</guid>
      <description>&lt;p&gt;요즘에 &lt;a href=&#34;https://ageldama.github.io/posts/2018-10oct/03wed-ping/&#34;&gt;HiFiBerry DAC+&lt;/a&gt;으로 라디오,&#xA;음악을 들으며 귀가 즐거워서..&lt;/p&gt;&#xA;&lt;p&gt;갖고 있는 씨디가 별로 없는데, 이유는.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;음악을 듣는걸 게을리했었고,&lt;/li&gt;&#xA;&lt;li&gt;딱히 음반으로 들었던건, 테잎 시대에 좀 사다가,&#xA;1. 씨디 시대엔 음원을 구하거나 사는게 더 많아지고,&#xA;2. 씨디를 듣지 않게됨.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;그러다가 그냥 음질이 조금이라도 더 낫게 들을려고 CD ripping이 답이라는&#xA;결론을 얻었다.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;어차피 음원 사는거랑 비슷한 가격이 됨.&lt;/li&gt;&#xA;&lt;li&gt;음원을 어차피 내가 만드는거라 원하는 음질으로 떠서 보관하면됨.&lt;/li&gt;&#xA;&lt;li&gt;그리고 뭣해서 잃어버려도 다시 떠도됨.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;결국 대장정을 시작했다..&lt;/p&gt;&#xA;&lt;h1 id=&#34;준비물들을-모았다&#34;&gt;준비물들을 모았다.&lt;/h1&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;CD-ROM 드라이브를 어차피 구해도 SATA방식으로 구해야할거 같고,&#xA;&lt;ol&gt;&#xA;&lt;li&gt;그냥 굳이 내장형으로 붙이기 싫어서, USB방식 ODD으로 구매.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;USB이외에 전원이 따로 있어야 제대로 돌아갈테니, 전원이 빵빵하게&#xA;공급되는 USB허브를 구매.&lt;/li&gt;&#xA;&lt;li&gt;USB메모리스틱을 샀다.&#xA;&lt;ol&gt;&#xA;&lt;li&gt;HiFiBerry 기계에 저장소로 붙여주려고.&lt;/li&gt;&#xA;&lt;li&gt;그런데 생각해보니 용량이 부족해져서 결국엔 NAS을 조립하게 될거&#xA;같아.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h1 id=&#34;abcde&#34;&gt;abcde&lt;/h1&gt;&#xA;&lt;p&gt;그냥 &lt;a href=&#34;https://en.wikipedia.org/wiki/Cdparanoia&#34;&gt;cdparanoia&lt;/a&gt; 이랑&#xA;&lt;a href=&#34;https://en.wikipedia.org/wiki/FLAC&#34;&gt;FLAC&lt;/a&gt; 정도로 세팅을 하려고 했다.&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>HiFiBerry DAC&#43; &#43; Raspberry Pi 3 설정</title>
      <link>https://ageldama.github.io/posts/2018-10oct/rpi3-hifiberry-dacplus-config/</link>
      <pubDate>Wed, 03 Oct 2018 20:00:00 +0900</pubDate>
      <guid>https://ageldama.github.io/posts/2018-10oct/rpi3-hifiberry-dacplus-config/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.hifiberry.com/&#34;&gt;https://www.hifiberry.com/&lt;/a&gt; 요거 Raspberry Pi 3에 세팅한 모험에 대한&#xA;이야기.&lt;/p&gt;&#xA;&lt;h1 id=&#34;wifi잡기&#34;&gt;WIFI잡기&lt;/h1&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# /etc/wpa_supplicant/wpa_supplicant.conf &#xA;ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev&#xA;#update_config=1&#xA;country=GB&#xA;&#xA;network={&#xA;&#x9;ssid=&amp;#34;iptime&amp;#34;&#xA;&#x9;psk=&amp;#34;xxxxxxxxxx&amp;#34;&#xA;&#x9;key_mgmt=WPA-PSK&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ol&gt;&#xA;&lt;li&gt;&lt;code&gt;wpa_passphrase&lt;/code&gt; 안쓰고 그냥 plaintext으로 써도 동작.&lt;/li&gt;&#xA;&lt;li&gt;내 공유기랑은 &lt;code&gt;country=GB&lt;/code&gt; 이 아니라, KR, US 등으로 되어 있으면 안되어서 해멤.&lt;/li&gt;&#xA;&lt;li&gt;그리고 &lt;code&gt;ip link set wlan0 {up|down}&lt;/code&gt; 정도로 wlan0 인터페이스를 up/down하면됨.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h1 id=&#34;사운드-드라이버-설정&#34;&gt;사운드 드라이버 설정&lt;/h1&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;내장 사운드카드 드라이버는 &lt;a href=&#34;https://ko.wikipedia.org/wiki/Modprobe&#34;&gt;modprobe&lt;/a&gt; blacklist에 추가해서 끄자.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;/boot/config.txt&lt;/code&gt;에 HiFiBerry DAC+ 드라이버 오버레이를 지정해야함.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;내장-사운드-드라이버-끄기&#34;&gt;내장 사운드 드라이버 끄기&lt;/h2&gt;&#xA;&lt;p&gt;다음처럼 modprobe blacklist에 추가해서 로딩 못하게 막음.&lt;/p&gt;</description>
    </item>
    <item>
      <title>어째서 아치리눅스를 쓰며 데스크탑환경을 안쓰는지</title>
      <link>https://ageldama.github.io/posts/2018-09sep/2018-09sep15sat-my-choices-linux/</link>
      <pubDate>Sat, 15 Sep 2018 16:20:00 +0900</pubDate>
      <guid>https://ageldama.github.io/posts/2018-09sep/2018-09sep15sat-my-choices-linux/</guid>
      <description>&lt;p&gt;나는 데스크탑 환경을 사용 안한지 꽤 오래된것 같아.&lt;/p&gt;&#xA;&lt;p&gt;예전엔 이런식이었던거 같아:&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;왠만하면, 그냥 세팅하는데 시간낭비하지말고 그냥 제공되는 Gnome, KDE&#xA;같이 예쁜거 쓰자.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;&amp;hellip;였었는데, 어느날 ASUS 넷북에 낮은 CPU파워으로 리눅스를 설정하고,&#xA;이런 &amp;ldquo;가벼운 데스크탑 환경&amp;quot;을 직접 꾸며서 사용하면서, 오히려 맥북보다&#xA;더 편하고 계속 쓰고 싶게 만들고, 내가 더 빠져서 사랑하며 사용하는걸 본&#xA;이후로 집과 직장의 데스크탑도 모두 바꾸게됐다.&lt;/p&gt;&#xA;&lt;p&gt;그리고 가장 마우스 사용으로부터 오는 잡다한 스트레스나 그런것들도 없고&#xA;가장 내게 익숙하고 편안한 환경을 만들어서 행복하게 쓸수있는거 같아.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
