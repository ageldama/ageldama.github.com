<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Engineering on 아겔로그</title>
    <link>http://localhost:1313/tags/engineering/</link>
    <description>Recent content in Engineering on 아겔로그</description>
    <generator>Hugo</generator>
    <language>ko-kr</language>
    <copyright>© &lt;a href=&#39;http://localhost:1313/myself&#39;&gt;ageldama&lt;/a&gt; 👾</copyright>
    <lastBuildDate>Sun, 12 Jun 2022 04:37:12 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/engineering/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>&#34;Some Engineering Tough Sells&#34;</title>
      <link>http://localhost:1313/posts/2022-06jun/06jun12sun--01-some-engr-tough-sells/</link>
      <pubDate>Sun, 12 Jun 2022 04:37:12 +0000</pubDate>
      <guid>http://localhost:1313/posts/2022-06jun/06jun12sun--01-some-engr-tough-sells/</guid>
      <description>https://posco.dev/blog/2022-04-23_draft_some-engineering-tough-sells/&#xA;&amp;hellip;공감이 가는 부분들은:&#xA;dynamic serialization isn’t worth it, use statically defined serialization untested code is virtually always somewhat wrong doing things right pays off sooner than we usually imagine an ounce of design is worth a pound of implementation in data engineering, the data very often violates your beliefs about the shape thinking about, and minimizing edges in your code’s dependency graph is a win a good (i.e. programmable, fast, reliable, reproducible) build system solves a lot of practical software engineering problems &amp;hellip;많은것들을 경험하되, 숙고와 자기객관화는 중요.</description>
    </item>
  </channel>
</rss>
