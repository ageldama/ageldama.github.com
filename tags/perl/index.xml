<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Perl on 아겔로그</title>
    <link>https://ageldama.github.io/tags/perl/</link>
    <description>Recent content in Perl on 아겔로그</description>
    <generator>Hugo</generator>
    <language>ko-kr</language>
    <copyright>© &lt;a href=&#39;https://ageldama.github.io/myself&#39;&gt;ageldama&lt;/a&gt; 👾</copyright>
    <lastBuildDate>Tue, 18 Mar 2025 13:30:16 +0000</lastBuildDate>
    <atom:link href="https://ageldama.github.io/tags/perl/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>xrandr 🖥️모니터 연결 자동전환 스크립트🐫</title>
      <link>https://ageldama.github.io/posts/2025-03mar/2025-03mar18--01-xrandr/</link>
      <pubDate>Tue, 18 Mar 2025 13:30:16 +0000</pubDate>
      <guid>https://ageldama.github.io/posts/2025-03mar/2025-03mar18--01-xrandr/</guid>
      <description>&lt;p&gt;&#xA;요즘 메인으로 사용하는 💻랩탑을 i3wm으로 세팅해서 쓰고 있다.&#xA;다 편한데, 🪟윈도나 icewm처럼 &lt;code&gt;Windows+P&lt;/code&gt; 누르면, 다음 모니터연결&#xA;조합으로 전환되는게 부러웠다.&lt;/p&gt;&#xA;&lt;p&gt;&#xA;매번 터미널 열고 &lt;code&gt;xrandr&lt;/code&gt; 치거나, &lt;a href=&#34;https://christian.amsuess.com/tools/arandr/&#34;&gt;arandr&lt;/a&gt; 열어서 세팅하기 귀찮으니까.&#xA;(물론 시스템 시작하면, 내가 좋아하는 설정이 적용되도록 해놓았지만)&lt;/p&gt;&#xA;&lt;p&gt;&#xA;그래서 그냥 윈도의 &lt;code&gt;Win+P&lt;/code&gt; 키처럼 동작하도록 스크립트를 짜봤다.&lt;/p&gt;&#xA;&lt;p&gt;&#xA;🐫 &lt;a href=&#34;https://github.com/ageldama/configs/blob/master/dotfiles/local_scripts/xrandr/combs.pl&#34;&gt;https://github.com/ageldama/configs/blob/master/dotfiles/local_scripts/xrandr/combs.pl&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;Perl으로 왠만하면 외부라이브러리 의존 않고 짜려고 노력.&lt;/p&gt;&#xA;&lt;p&gt;&#xA;그리고 예전이랑 코딩스타일이 점점 변해가고 있다고 생각이 들었는데,&#xA;예전에는 기계공감에 더 비중을 뒀었다면, 이제는 내가 쓸때 더 편하고 별&#xA;생각없이 되는쪽에 더 비중을 두게 되는거 같다. 좋게 말하자면… 🤤&lt;/p&gt;</description>
    </item>
    <item>
      <title>data-driven programming &amp; data-driven design &amp; data-oriented programming ???</title>
      <link>https://ageldama.github.io/posts/2025-03mar/2025-03mar12--01-data-prog/</link>
      <pubDate>Wed, 12 Mar 2025 10:40:27 +0000</pubDate>
      <guid>https://ageldama.github.io/posts/2025-03mar/2025-03mar12--01-data-prog/</guid>
      <description>&lt;p&gt;&#xA;비슷한 용어들. 내가 이해한 정리들은 &lt;sup class=&#34;footnote-reference&#34;&gt;&lt;a id=&#34;footnote-reference-1&#34; href=&#34;#footnote-1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;:&lt;/p&gt;&#xA;&lt;div id=&#34;outline-container-headline-1&#34; class=&#34;outline-2&#34;&gt;&#xA;&lt;h2 id=&#34;headline-1&#34;&gt;&#xA;data-driven programming&#xA;&lt;/h2&gt;&#xA;&lt;div id=&#34;outline-text-headline-1&#34; class=&#34;outline-text-2&#34;&gt;&#xA;&lt;p&gt;데이터처리를 중심으로 하는 프로그래밍언어나 도구, 스타일.&lt;/p&gt;&#xA;&lt;p&gt;&#xA;  예를 들어, awk, perl은 입력의 패턴에 따라 코드를 나누고 출력을&#xA;  만들기 수월한 방식을 제공.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Data-driven_programming&#34;&gt;https://en.wikipedia.org/wiki/Data-driven_programming&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/Perl/perl5/commit/8d063cd8450e59ea1c611a2f4f5a21059a2804f1&#34;&gt;a &amp;#34;replacement&amp;#34; for awk and sed&lt;/a&gt; (by Larry Wall)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;div id=&#34;outline-container-headline-2&#34; class=&#34;outline-2&#34;&gt;&#xA;&lt;h2 id=&#34;headline-2&#34;&gt;&#xA;data-oriented design&#xA;&lt;/h2&gt;&#xA;&lt;div id=&#34;outline-text-headline-2&#34; class=&#34;outline-text-2&#34;&gt;&#xA;&lt;p&gt;현대 cpu의 아키텍처에 적절하도록, cpu cache, simd등을 잘 적용될 수&#xA;  있도록 애플리케이션 데이터구조를 설계하는 방식.&lt;sup class=&#34;footnote-reference&#34;&gt;&lt;a id=&#34;footnote-reference-2&#34; href=&#34;#footnote-2&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;  그리고 단순히 게임개발에서 ecs만이 아니라 lmax disruptor등도 포함될&#xA;  것 같다.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Data-oriented_design&#34;&gt;https://en.wikipedia.org/wiki/Data-oriented_design&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;dod의 예시: &lt;a href=&#34;https://en.wikipedia.org/wiki/Entity_component_system&#34;&gt;Entity component system&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://martinfowler.com/articles/lmax.html&#34;&gt;lmax disruptor&lt;/a&gt; (by Martin Fowler)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;div id=&#34;outline-container-headline-3&#34; class=&#34;outline-2&#34;&gt;&#xA;&lt;h2 id=&#34;headline-3&#34;&gt;&#xA;data-oriented programming&#xA;&lt;/h2&gt;&#xA;&lt;div id=&#34;outline-text-headline-3&#34; class=&#34;outline-text-2&#34;&gt;&#xA;&lt;p&gt;그리고 또 갑자기 위 2개의 정의처럼 완전 갑자기, dop은 다음과 같은&#xA;  원칙들을 이용한 애플리케이션 개발방식:&lt;/p&gt;</description>
    </item>
    <item>
      <title>`ncal -3` 직접 Perl으로 짜봤다</title>
      <link>https://ageldama.github.io/posts/2023-03mar/perl-cal3/</link>
      <pubDate>Thu, 02 Mar 2023 17:50:00 +0000</pubDate>
      <guid>https://ageldama.github.io/posts/2023-03mar/perl-cal3/</guid>
      <description>&lt;p&gt;&#xA;&lt;code class=&#34;verbatim&#34;&gt;ncal -3&lt;/code&gt; 이 뭐냐하면:&lt;/p&gt;&#xA;&lt;p&gt;&#xA;&lt;a href=&#34;https://man7.org/linux/man-pages/man1/cal.1.html&#34;&gt;https://man7.org/linux/man-pages/man1/cal.1.html&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;…뭐 이런건데, 개인적으로 저전력 글쓰기 전용머신에서 사용하는&#xA;스크립트에서 배포판이 달라서 패키지를 못찾겠어서 &lt;sup class=&#34;footnote-reference&#34;&gt;&lt;a id=&#34;footnote-reference-1&#34; href=&#34;#footnote-1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;, …그냥 직접&#xA;짜서 대체했다.&lt;/p&gt;&#xA;&lt;p&gt;&#xA;&lt;a href=&#34;https://github.com/ageldama/configs/commit/66bd92b42ba5a5ee03b9336370c3a8f84293e488&#34;&gt;https://github.com/ageldama/configs/commit/66bd92b42ba5a5ee03b9336370c3a8f84293e488&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;그래서 스크린샷은:&lt;/p&gt;&#xA;&lt;p&gt;&#xA;&lt;img src=&#34;https://ageldama.github.io/2023-03mar/journal-edit-cal3.png&#34; alt=&#34;/2023-03mar/journal-edit-cal3.png&#34; title=&#34;/2023-03mar/journal-edit-cal3.png&#34; /&gt;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;재밌었던 부분은:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;어차피 Perl으로 전부 짜서 쓰는 스크립트였는데,&#xA;아예 외부 커맨드라인 도구 의존성을 더 없애서 뿌듯하다.&lt;/li&gt;&#xA;&lt;li&gt;매달 달력을 문자열으로 뽑았는데, 3달치를 뽑아서, 이걸 한 row에&#xA;표시하고 싶었는데, &lt;a href=&#34;https://metacpan.org/pod/Text::Table&#34;&gt;Text::Table&lt;/a&gt;으로 적절히 간단히 완료.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://metacpan.org/pod/Term::ANSIColor&#34;&gt;Term::ANSIColor&lt;/a&gt;와 &lt;a href=&#34;https://perldoc.perl.org/perlre&#34;&gt;perlre&lt;/a&gt;을 써서 깔끔하게 원하는 일자에 highlighting&#xA;해서 편안했다.&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;…더 해킹을 해서, &lt;code class=&#34;verbatim&#34;&gt;calendar(..)&lt;/code&gt; 결과문자열을 적당히 파싱해서,&#xA;작은 Text::Table으로 만들어서, 그것들으로 조합하고 했었어도 될거&#xA;같아.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Hololog Perl/CLI 버젼</title>
      <link>https://ageldama.github.io/posts/2019-12dec/hololog-perl-cli-1st-rel/</link>
      <pubDate>Tue, 17 Dec 2019 00:00:00 +0900</pubDate>
      <guid>https://ageldama.github.io/posts/2019-12dec/hololog-perl-cli-1st-rel/</guid>
      <description>&lt;p&gt;&#xA;&lt;a href=&#34;https://github.com/ageldama/hololog-perl-cli&#34;&gt;https://github.com/ageldama/hololog-perl-cli&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&#xA;한줄씩 메모를 하는걸 좋아하고, 그냥 데스크탑에서 PDF을 읽거나&#xA;웹페이지를 읽으면서 어딘가에 생각난거나 이해한걸 필기하면서 진행하고&#xA;싶어서 만들었다.&lt;/p&gt;&#xA;&lt;p&gt;&#xA;다음 트윗 타래에서 이야기한것처럼, 그냥 트위터 비밀계를 써도 괜찮지만,&#xA;그것도 너무 웹브라우져 열고 하다보면 산만해져서.&lt;/p&gt;&#xA;&lt;p&gt;&#xA;tweet 1206138361968070656 &lt;/p&gt;&#xA;&lt;p&gt;&#xA;처음 시작은 &lt;a href=&#34;https://www.gnu.org/software/coreutils/manual/html_node/cat-invocation.html&#34;&gt;Unix/GNU cat&lt;/a&gt; 을 간단하게 터미널에서 쓰면 된다는 생각이&#xA;들었다.&lt;/p&gt;&#xA;&lt;div class=&#34;src src-shell&#34;&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34; id=&#34;1&#34;&gt;&lt;a class=&#34;lnlinks&#34; href=&#34;#1&#34;&gt;1&lt;/a&gt;&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cat &amp;gt;&amp;gt; foo.txt&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p&gt;&#xA;..그런데 유닉스가 아닌 사람들, 윈도를 쓰는 사람들은 어떻게 하지?&lt;/p&gt;&#xA;&lt;div class=&#34;src src-shell&#34;&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34; id=&#34;1&#34;&gt;&lt;a class=&#34;lnlinks&#34; href=&#34;#1&#34;&gt;1&lt;/a&gt;&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;copy con foo.txt&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;p&gt;&#xA;..사실 위와 같이 &lt;code&gt;cmd.exe&lt;/code&gt; 에서 실행해도 되겠지만, 뭔가 그래도 윈도&#xA;사용자들이나 터미널 화면을 무서워하는 사람들이 저런거&#xA;좋아할까.. 싶어서 조금 생각.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
