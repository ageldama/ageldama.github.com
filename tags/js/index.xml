<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Js on 아겔로그</title>
    <link>https://ageldama.github.io/tags/js/</link>
    <description>Recent content in Js on 아겔로그</description>
    <generator>Hugo</generator>
    <language>ko-kr</language>
    <copyright>© &lt;a href=&#39;https://ageldama.github.io/myself&#39;&gt;ageldama&lt;/a&gt; 👾</copyright>
    <lastBuildDate>Thu, 20 Mar 2025 11:51:36 +0000</lastBuildDate>
    <atom:link href="https://ageldama.github.io/tags/js/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>darkmode.js으로 변경</title>
      <link>https://ageldama.github.io/posts/2025-03mar/2025-03mar20--01--darkmode-js/</link>
      <pubDate>Thu, 20 Mar 2025 11:51:36 +0000</pubDate>
      <guid>https://ageldama.github.io/posts/2025-03mar/2025-03mar20--01--darkmode-js/</guid>
      <description> 직접 짠 css/js에서 darkmode.js으로 변경했다. css에서 보색관계를 고려하는 것도 좀 귀찮고 해서.&#xA;변경도 예쁘게 애니메이션 나오고, system preference 지정도 자동으로 되고.&#xA;(미래의 나를 위해) css/html에서 class 1 2 3 .darkmode--activated .logo { mix-blend-mode: difference; } 1 &amp;lt;span class=&amp;#34;darkmode-ignore&amp;#34;&amp;gt;😬&amp;lt;span&amp;gt; </description>
    </item>
    <item>
      <title>Hugo &#43; pagefind 붙여서 검색기능 추가했다</title>
      <link>https://ageldama.github.io/posts/2025-03mar/2025-03mar16--01-pagefind&#43;hugo/</link>
      <pubDate>Sun, 16 Mar 2025 06:25:48 +0000</pubDate>
      <guid>https://ageldama.github.io/posts/2025-03mar/2025-03mar16--01-pagefind&#43;hugo/</guid>
      <description>https://pagefind.app/&#xA;페이지 생성시에 인덱싱하고 그걸로 웹브라우저내에서 js으로 검색하는 pagefind을 붙여봤다.&#xA;처음엔 좀 어색했는데, 커스터마이징을 별로 제공하지 않기는 했지만, 그래도 이것저것 뜯어서 CSS도 마음에 들게 좀 수정하고, JS/DOM 이벤트도 적당히 잡아서 마음에 들게 동작하게 고쳤다.&#xA;별로라고 생각하던 부분들도 다 뜯어 고치고 하면서 더 블로그가 마음에 들어진다. 🤠</description>
    </item>
    <item>
      <title>News 08/03/2023 .02 : reactjs, rust, zig, hiring, nes</title>
      <link>https://ageldama.github.io/posts/2023-03mar/2023-03mar08--02-ping--news/</link>
      <pubDate>Wed, 08 Mar 2023 06:32:05 +0000</pubDate>
      <guid>https://ageldama.github.io/posts/2023-03mar/2023-03mar08--02-ping--news/</guid>
      <description>&amp;#34;리액트가 날 인질으로 잡고 있어요&amp;#34; &amp;#34;헛소리/bullshit 없이 엔지니어링 재능이 있는 사람을 고용하기&amp;#34; &amp;#34;NESFab is a new programming language for creating NES games&amp;#34; &amp;#34;zig이 rust보다 빠르고 안전할 수 있는 경우&amp;#34; &amp;#34;리액트가 날 인질으로 잡고 있어요&amp;#34; https://emnudge.dev/blog/react-hostage&#xA;…말해 뭘할까 싶은데. :see_no_evil:&#xA;포스팅 자체는 react, hooks 같은 것들의 complexity에 대한 이야기이지만.&#xA;오히려 흥미롭게 생각하는 것은, 과거 한국에서 &amp;#39;퍼블리셔&amp;#39;라고 하던 사람들이 어떻게 되었는가 생각해보며, 함께 지금의 &amp;#39;프론트엔드 개발자&amp;#39;, 혹은 &amp;#39;앱 개발자&amp;#39;, &amp;#39;리액트 개발자&amp;#39;, &amp;#39;자바스크립트 개발자&amp;#39;들이 앞으로 어떻게 될지 상상해본다.</description>
    </item>
    <item>
      <title>Ping 02/Nov/2020</title>
      <link>https://ageldama.github.io/posts/2020-11nov/ping-02mon/</link>
      <pubDate>Mon, 02 Nov 2020 00:00:00 +0900</pubDate>
      <guid>https://ageldama.github.io/posts/2020-11nov/ping-02mon/</guid>
      <description>(functional) reactive 관련들을 다시 찾아 보고 있다.&#xA;예전에 webdev은 아니고 백엔드를 위해서 rxjs 을 쓸 일이 있었었고 꽤 재밌었다. node.js에서 async/await 이전에 동시성 처리를 하기에 유용하게 쓸 수 있었었고, 실은 그냥 monad이어서 조금만 이해를 하고 사용하면 여러모로 편리했었다.&#xA;https://github.com/stoeffel/awesome-frp-js 여기에 보면 rxjs이외에도 다른 js을 위한 FRP라이브러리들이 많이 생겼었다.&#xA;그 중에 흥미가 있어서 bacon.js 을 읽고 rxjs에서 만들어 본 작은 예제 프로젝트를 다시 작성해봤다. 깔끔했다.&#xA;rxjs으로 작성했었던 작은 예제는 다음과 같다.</description>
    </item>
  </channel>
</rss>
