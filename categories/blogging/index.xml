<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogging on 아겔로그</title>
    <link>https://ageldama.github.io/categories/blogging/</link>
    <description>Recent content in Blogging on 아겔로그</description>
    <generator>Hugo</generator>
    <language>ko-kr</language>
    <copyright>© &lt;a href=&#39;https://ageldama.github.io/myself&#39;&gt;ageldama&lt;/a&gt; 👾</copyright>
    <lastBuildDate>Sat, 15 Mar 2025 12:25:01 +0000</lastBuildDate>
    <atom:link href="https://ageldama.github.io/categories/blogging/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>css, design 새단장 &#43; dark-mode</title>
      <link>https://ageldama.github.io/posts/2025-03mar/2025-03mar15--01-new-css/</link>
      <pubDate>Sat, 15 Mar 2025 12:25:01 +0000</pubDate>
      <guid>https://ageldama.github.io/posts/2025-03mar/2025-03mar15--01-new-css/</guid>
      <description>css 더 단순하게 만들고, 디자인들도 그냥 내 마음에 들게 뜯어 고침. 다크모드도 작업해서 만들어 넣고.&#xA;css 애니메이션도 작업해 넣었다가, gpu 너무 쓰는거 같아서 그냥 끄고 정적효과로만 냅둠.&#xA;hugo 같은 static site generator이 좋은 점, 그리고 그냥 단순한 css와 오래된 jquery으로 그냥 뚝딱거려서 작업.</description>
    </item>
    <item>
      <title>pytest fixtures와 의존성관리, 그리고 복잡도관리</title>
      <link>https://ageldama.github.io/posts/2022-jekyll/2022-06-08--02-pytest-fixtures-and-complexity-mgmt/</link>
      <pubDate>Wed, 08 Jun 2022 18:20:00 +0900</pubDate>
      <guid>https://ageldama.github.io/posts/2022-jekyll/2022-06-08--02-pytest-fixtures-and-complexity-mgmt/</guid>
      <description># ...tests/conftest.py import pytest @pytest.fixture def name(): return &#39;Pokemon&#39; @pytest.fixture(scope=&#39;function&#39;) def monster(name): ... # ...tests/foo_test.py : def test_beast(monster): ... # &amp;lt;--- `def monster(..)`의 결과를 주입 받음. https://docs.pytest.org/en/6.2.x/fixture.html&#xA;&amp;hellip;파이썬에 다른 의존성주입 컨테이너들도 있지만, 흥미롭고 실용적이어서 자주 쓰게됨. 내가 소프트웨어 프로젝트에서 가장 중요하다고 생각하는 부분을 잘 캐치해주고, 편안하게 해주는 방식 같아.&#xA;&amp;lsquo;거창함&amp;rsquo;이나 뭔가 남들이 좋다고 쓴다니까, 별 생각 없이 시도하는것들을 보면&amp;hellip; 글쎄. ㅎㅎ&amp;hellip;</description>
    </item>
    <item>
      <title>(HN) &#34;asshole test&#34;</title>
      <link>https://ageldama.github.io/posts/2022-jekyll/2022-06-08--01-asshole-test/</link>
      <pubDate>Wed, 08 Jun 2022 18:00:00 +0900</pubDate>
      <guid>https://ageldama.github.io/posts/2022-jekyll/2022-06-08--01-asshole-test/</guid>
      <description>Some years back I applied to join IBM&amp;rsquo;s grad scheme, there was a peculiar stage to the process I&amp;rsquo;ve not seen elsewhere. It was during the onsite day, where a batch of 20 or so applicants were put through various tests in an IBM office. They called it the &amp;ldquo;group test&amp;rdquo;; around 8 of us were led to a room and asked to solve a puzzle together. Each of us was given an information pack, there was a white board, and a timer ticking down from 60 minutes.</description>
    </item>
    <item>
      <title>Hotwired 재밌다.</title>
      <link>https://ageldama.github.io/posts/2022-jekyll/2022-06-06--01-hotwired-fun/</link>
      <pubDate>Mon, 06 Jun 2022 19:50:00 +0900</pubDate>
      <guid>https://ageldama.github.io/posts/2022-jekyll/2022-06-06--01-hotwired-fun/</guid>
      <description>Hotwired 재밌다.&#xA;Stimulus, Turbo + Rails 7 갖고 이것저것 패턴별로 생각해보고 만드는게 즐겁네.&#xA;딱, 이렇게 문제 그자체를 이해하고 설계해놓은 것들은 익히고 사용하는게 너무 즐겁다. rails도 그랬었고, &amp;hellip;처음 볼때에는 뭐 이렇게 단순해? 싶을 정도로.&#xA;너무 거창하거나, 실제로는 그 문제를 깊이 생각해서 푼게 아니라, 너무 범용적이고 범우주적인 해법(예: 상태관리, 컴포넌트 모델)만으로 퉁치려는것보다는. &amp;hellip;이제 그런것들에 혹하거나 끌리지 않게 되었다.&#xA;그리고 또 한편으로는, 모든 해법은 단순하고 우아해야만 한다고 믿고 싶어서 믿는 fanboy가 되고 싶지도 않고.</description>
    </item>
    <item>
      <title>블로그 폰트 적용</title>
      <link>https://ageldama.github.io/posts/2019-10oct/blog-font/</link>
      <pubDate>Mon, 21 Oct 2019 00:00:00 +0900</pubDate>
      <guid>https://ageldama.github.io/posts/2019-10oct/blog-font/</guid>
      <description>그냥 CDN에서 내려받는 공개된 Noto 폰트를 적용했다. 깔끔하다.1&#xA;어제는 네오둥근모 적용해서 완전 귀엽고 내 취향이기는했는데, 그렇게 두면 안될것 같아서 좀 평범한 폰트로 바꿨다.&#xA;깔끔하게 글이 눈에 잘 들어오고 CDN에서 내려받으니 빨라서 좋다.&#xA;워드프레스에서 본명조(Noto Serif CJK KR) 폰트 사용하기 이 포스팅을 참고. 고맙습니다. 글 쓰신분 아이디가 이스크라(러시아어 &amp;lsquo;불꽃&amp;rsquo;)이라니&amp;hellip; 심장이 뜨거워진다.&amp;#160;&amp;#x21a9;&amp;#xfe0e;</description>
    </item>
    <item>
      <title>Jekyll &#43; Rouge 소스코드 하일라이팅 테스트</title>
      <link>https://ageldama.github.io/posts/2017/2017-01-02-source-hilite-testing/</link>
      <pubDate>Mon, 02 Jan 2017 05:15:00 +0100</pubDate>
      <guid>https://ageldama.github.io/posts/2017/2017-01-02-source-hilite-testing/</guid>
      <description>Rouge 이거 적용해보기.&#xA;https://github.com/ageldama/hello-adder-cl-asdf/blob/master/src/adders.lisp&#xA;;;; Actual Implementations here. (in-package :hello-adder) (defun make-adder (n) (lambda (x) (+ n x))) (defun 1+er () (make-adder 1)) https://github.com/ageldama/ageldama-gh-jekyll/commit/334ead4b31b305b82e85ae2c6a6e0a219ecc9e66 이렇게 작업해봤음.</description>
    </item>
    <item>
      <title>Github.io 블로그 TraviCI으로 빌드해서 배포하기</title>
      <link>https://ageldama.github.io/posts/2017/2017-01-02-travis-ci-jekyll-gh/</link>
      <pubDate>Mon, 02 Jan 2017 04:35:00 +0100</pubDate>
      <guid>https://ageldama.github.io/posts/2017/2017-01-02-travis-ci-jekyll-gh/</guid>
      <description>.. 여기 에 불만을 적었듯이, 여러가지로 그냥은 만족하기 어려운 부분이 있었다.&#xA;그런데, Travis-CI을 통해서 빌드해서 배포한다는 분이 계셨다. https://twitter.com/Realignist/status/815554589889994752&#xA;..난 생각 못해본 방법. ㅎㅎ 1&#xA;그래서 도전.&#xA;우선 Jekyll 소스용 저장소로 분리하고, 배포하는 페이지들은 원래의 저장소에 git-push 하도록 했다. https://github.com/felixrieseberg/travis-jekyll-git 여기 참고해서 삽질. 결과물은 https://github.com/ageldama/ageldama-gh-jekyll ..진행하면서 처음에 좀 짜증났던거,&#xA;Gemfile 에 설치할 의존성들 지정하고, bundle update. 그리고 그것만으로는 안되고, .travis.yml 파일에 gem설치를 지정해야했다. https://github.com/ageldama/ageldama-gh-jekyll/blob/master/.travis.yml#L5 Travis-CI 작업의 세팅에서 git_target 환경변수에 URL지정할때&amp;hellip; github.</description>
    </item>
    <item>
      <title>Github.io의 Jekyll 버젼이랑 차이?</title>
      <link>https://ageldama.github.io/posts/2017/2017-01-01-github-jekyll/</link>
      <pubDate>Sun, 01 Jan 2017 14:35:00 +0100</pubDate>
      <guid>https://ageldama.github.io/posts/2017/2017-01-01-github-jekyll/</guid>
      <description>다 만족스럽고 좋은데, 로컬에서 Jekyll 실행해서 미리보기한 결과랑 Github에 올려서 렌더링한거랑 마크다운 결과가 조금 달라서 짜증난다.&#xA;아마 마크다운 렌더러 버젼 차이 때문일거 같은데 ㅜ.ㅜ&#xA;% jekyll -v jekyll 3.3.1 </description>
    </item>
  </channel>
</rss>
